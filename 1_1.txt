// RemoteInterface
import java.rmi.Remote;
import java.rmi.RemoteException;

public interface RemoteInterface extends Remote {
    String reverseNumber(int number) throws RemoteException;
}


//ServerImplementation
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

public class ServerImplementation extends UnicastRemoteObject implements RemoteInterface {

    protected ServerImplementation() throws RemoteException {
        super();
    }

    @Override
    public synchronized String reverseNumber(int number) throws RemoteException {
        int reversed = 0;
        int original = number;

        while (number != 0) {
            int digit = number % 10;
            reversed = reversed * 10 + digit;
            number /= 10;
        }

        System.out.println("Received number: " + original + ", Reversed: " + reversed);
        return "Reversed number is: " + reversed;
    }
}
// Server.java

import java.rmi.Naming;
import java.rmi.registry.LocateRegistry;

public class Server {
    public static void main(String[] args) {
        try {
            LocateRegistry.createRegistry(1099); // Start the registry
            ServerImplementation server = new ServerImplementation();
            Naming.rebind("RemoteService", server);
            System.out.println("Server is running...");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
//Client.java
import java.rmi.Naming;
import java.util.Scanner;

public class Client {
    public static void main(String[] args) {
        try {
            RemoteInterface stub = (RemoteInterface) Naming.lookup("rmi://localhost/RemoteService");

            Scanner scanner = new Scanner(System.in);
            System.out.print("Enter a number to reverse: ");
            int number = scanner.nextInt();

            String response = stub.reverseNumber(number);
            System.out.println("Server response: " + response);
            scanner.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
//javac *.java
//java Server
//java Client


